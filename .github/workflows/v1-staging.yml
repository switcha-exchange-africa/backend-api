name: Switcha Africa Staging

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ v1 ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true
#2
env:
  REGISTRY: "registry.digitalocean.com/switcha-africa"
  IMAGE_NAME: "switcha_staging-app"

#3
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v2
        
      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITAL_OCEAN_ACCESS_TOKEN }}
    
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      
      - name: Remove all old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
        
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITAL_OCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # Login to registry
            docker login -u ${{ secrets.DIGITAL_OCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITAL_OCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            # Stop running container
            docker stop $(echo $IMAGE_NAME)
            # Remove old container
            docker rm $(echo $IMAGE_NAME)
            # Run a new container from a new image
            docker run -d \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

# name: Switcha Africa staging continuous integration

# on:
#   push:
#     branches:
#       - v1
#     tags:
#       - v1-stage-*

# jobs:
#   build:

#     runs-on: ubuntu-20.04

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Install doctl
#       uses: digitalocean/action-doctl@v2
#       with:
#         token: ${{ secrets.DIGITAL_OCEAN_ACCESS_TOKEN }}

#     - name: Log in to DigitalOcean Container Registry with short-lived credentials
#       run: doctl registry login --expiry-seconds 600

#     - name: Get the commit hash
#       id: tag
#       run: echo ::set-output name=IMG_TAG::$(echo $GITHUB_SHA)

#     - name: Build and tag the Docker image
#       run: docker build ./ --file ./Dockerfile
#         --tag registry.digitalocean.com/${{ secrets.CONTAINER_REGISTRY_NAME }}/switcha_staging-app:${{steps.tag.outputs.IMG_TAG}}
#         --tag registry.digitalocean.com/${{ secrets.CONTAINER_REGISTRY_NAME }}/switcha_staging-app:latest

#     - name: Push the tagged Docker image
#       run: |
#         docker push registry.digitalocean.com/${{ secrets.CONTAINER_REGISTRY_NAME }}/switcha_staging-app:${{steps.tag.outputs.IMG_TAG}}
#         docker push registry.digitalocean.com/${{ secrets.CONTAINER_REGISTRY_NAME }}/switcha_staging-app:latest

